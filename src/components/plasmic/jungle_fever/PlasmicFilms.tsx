// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: neKnaqAFQgtkJjtbXthdKd
// Component: 5OgwKt-TBxM
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: -5kvBjMJU6nse/component
import Footer from "../../Footer"; // plasmic-import: LYimf7BcZyc4G/component

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_jungle_fever.module.css"; // plasmic-import: neKnaqAFQgtkJjtbXthdKd/projectcss
import sty from "./PlasmicFilms.module.css"; // plasmic-import: 5OgwKt-TBxM/css

import musicHolejpegXXl4WHnk from "./images/musicHolejpeg.jpeg"; // plasmic-import: xXl-4wHnk/picture

export type PlasmicFilms__VariantMembers = {};

export type PlasmicFilms__VariantsArgs = {};
type VariantPropType = keyof PlasmicFilms__VariantsArgs;
export const PlasmicFilms__VariantProps = new Array<VariantPropType>();

export type PlasmicFilms__ArgsType = {};
type ArgPropType = keyof PlasmicFilms__ArgsType;
export const PlasmicFilms__ArgProps = new Array<ArgPropType>();

export type PlasmicFilms__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<typeof Header>;
  h1?: p.Flex<"h1">;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultFilmsProps {
  className?: string;
}

function PlasmicFilms__RenderFunc(props: {
  variants: PlasmicFilms__VariantsArgs;
  args: PlasmicFilms__ArgsType;
  overrides: PlasmicFilms__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  return (
    <React.Fragment>
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox___8QceR)}>
              <h1
                data-plasmic-name={"h1"}
                data-plasmic-override={overrides.h1}
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1
                )}
              >
                {"Pick your film"}
              </h1>

              <div className={classNames(projectcss.all, sty.freeBox__hoD6L)}>
                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__wWqc6
                  )}
                  href={`/play`}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__y2H3Z)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: musicHolejpegXXl4WHnk,
                      fullWidth: 1198,
                      fullHeight: 1600,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eNyN
                    )}
                  >
                    {"Music Hole"}
                  </div>
                </a>

                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link___8C8S
                  )}
                  href={`/play`}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__vvdy0)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: musicHolejpegXXl4WHnk,
                      fullWidth: 1198,
                      fullHeight: 1600,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__awxNs
                    )}
                  >
                    {"Music Hole"}
                  </div>
                </a>

                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__rdL6M
                  )}
                  href={`/play`}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__mHtMk)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: musicHolejpegXXl4WHnk,
                      fullWidth: 1198,
                      fullHeight: 1600,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bq5S
                    )}
                  >
                    {"Music Hole"}
                  </div>
                </a>

                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__hIYf
                  )}
                  href={`/play`}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___5ZHEg)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: musicHolejpegXXl4WHnk,
                      fullWidth: 1198,
                      fullHeight: 1600,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__igzp0
                    )}
                  >
                    {"Music Hole"}
                  </div>
                </a>

                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__auWhy
                  )}
                  href={`/play`}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__gyTxz)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: musicHolejpegXXl4WHnk,
                      fullWidth: 1198,
                      fullHeight: 1600,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4SKow
                    )}
                  >
                    {"Music Hole"}
                  </div>
                </a>

                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__ezoAp
                  )}
                  href={`/play`}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__lV34W)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: musicHolejpegXXl4WHnk,
                      fullWidth: 1198,
                      fullHeight: 1600,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bz7W0
                    )}
                  >
                    {"Music Hole"}
                  </div>
                </a>

                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link___4RQ7
                  )}
                  href={`/play`}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__pzDj6)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: musicHolejpegXXl4WHnk,
                      fullWidth: 1198,
                      fullHeight: 1600,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oBDkM
                    )}
                  >
                    {"Music Hole"}
                  </div>
                </a>

                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__zQz3I
                  )}
                  href={`/play`}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__mLyFz)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: musicHolejpegXXl4WHnk,
                      fullWidth: 1198,
                      fullHeight: 1600,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qGctf
                    )}
                  >
                    {"Music Hole"}
                  </div>
                </a>

                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__qfGuu
                  )}
                  href={`/play`}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__hD2It)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: musicHolejpegXXl4WHnk,
                      fullWidth: 1198,
                      fullHeight: 1600,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__j0W5O
                    )}
                  >
                    {"Music Hole"}
                  </div>
                </a>

                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__vaEuD
                  )}
                  href={`/play`}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__rfHTd)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: musicHolejpegXXl4WHnk,
                      fullWidth: 1198,
                      fullHeight: 1600,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nFa2D
                    )}
                  >
                    {"Music Hole"}
                  </div>
                </a>

                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__zz7Ej
                  )}
                  href={`/play`}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__mvxuX)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: musicHolejpegXXl4WHnk,
                      fullWidth: 1198,
                      fullHeight: 1600,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2KvnC
                    )}
                  >
                    {"Music Hole"}
                  </div>
                </a>

                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__zmm6D
                  )}
                  href={`/play`}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__tgjMg)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: musicHolejpegXXl4WHnk,
                      fullWidth: 1198,
                      fullHeight: 1600,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8TqV5
                    )}
                  >
                    {"Music Hole"}
                  </div>
                </a>
              </div>
            </div>
          ) : null}

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "header", "h1", "footer"],
  header: ["header"],
  h1: ["h1"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  h1: "h1";
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicFilms__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicFilms__VariantsArgs;
    args?: PlasmicFilms__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicFilms__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicFilms__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicFilms__ArgProps,
          internalVariantPropNames: PlasmicFilms__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicFilms__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFilms";
  } else {
    func.displayName = `PlasmicFilms.${nodeName}`;
  }
  return func;
}

export const PlasmicFilms = Object.assign(
  // Top-level PlasmicFilms renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    h1: makeNodeComponent("h1"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicFilms
    internalVariantProps: PlasmicFilms__VariantProps,
    internalArgProps: PlasmicFilms__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Jungle Fever - The films",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicFilms;
/* prettier-ignore-end */
